- if @award and !@award.errors.empty?
  .alert.alert-error
    - @award.errors.full_messages.each do |e|
      %p= e
- if @sow and !@sow.errors.empty?
  .alert.alert-error
    - @sow.errors.full_messages.each do |e|
      %p= e
.row
  .span8
    = render @sow
    
    #attachment_list
      %h5 Attachments
      = render 'attachments/list', attachments: @sow.attachments
    
  .span4
    = render 'sow_steps'
  
    %h4 Actions
    = link_to sows_path, class: 'btn btn-block' do
      %i.icon-arrow-left
      Back to statements of work
      
    - unless @sow.award.nil?
      = link_to 'View Award', @sow.award, class: 'btn btn-info btn-block'
      
    - unless @sow.awarded? or @sow.owner != current_member
      - if @sow.created? or @sow.editing? or @sow.rejected?
        = link_to edit_sow_path(@sow), class: 'btn btn-block' do
          %i.icon-edit
          Edit
      - elsif @sow.can_edit?
        = link_to edit_sow_path(@sow), class: 'btn btn-block', confirm: 'Are you sure? Editing this statement of work will remove it from the review queue' do
          %i.icon-edit
          Edit

    - if @sow.can_submit? and !@sow.reviewing? and @sow.owner == current_member
      = link_to submit_sow_path(@sow), method: :post, class: 'btn btn-block btn-primary' do
        Submit for review

      = render 'attachments_form', sow: @sow

    - if @sow.ready_for_review? and @sow.award_group.present?
      = render 'sow_approval_buttons', sow: @sow

    - if @sow.can_generate_award? and current_member.has_role?(:budget) 
      = link_to new_award_sow_path(@sow), method: :post, class: 'btn btn-block btn-primary' do
        Generate new award
      = link_to new_award_sow_path(@sow), method: :post, class: 'btn btn-block btn-primary' do
        Attach to existing award
        
    = render 'layouts/activity_stream', activities: @sow.activities.for(current_member)
    
#pi_approval_modal.modal.hide.fade
  = form_for @sow, html: { style: 'margin: 0;' } do |f|
    = f.hidden_field :pi_approval, value: true
    .modal-header
      %button.close{data:{dismiss:"modal"}} &times;
      %h3 Reviewer Notes
    .modal-body
      .row-fluid
        = f.text_area :review_notes, value: '', rows: 8, class: 'span12'
    .modal-footer
      = link_to 'Close', '#', class: 'btn', data: { dismiss: 'modal' }
      = f.submit class: 'btn btn-primary'
      
#gl_approval_modal.modal.hide.fade
  = form_for @sow, html: { style: 'margin: 0;' } do |f|
    = f.hidden_field :gl_approval, value: true
    .modal-header
      %button.close{data:{dismiss:"modal"}} &times;
      %h3 Reviewer Notes
    .modal-body
      .row-fluid
        = f.text_area :review_notes, value: '', rows: 8, class: 'span12'
    .modal-footer
      = link_to 'Close', '#', class: 'btn', data: { dismiss: 'modal' }
      = f.submit class: 'btn btn-primary'
      
#rejection_modal.modal.hide.fade
  = form_for @sow, html: { style: 'margin: 0;' } do |f|
    = f.hidden_field :rejected, value: true
    .modal-header
      %button.close{data:{dismiss:"modal"}} &times;
      %h3 Reason for rejection
    .modal-body
      .row-fluid
        = f.text_area :review_notes, value: '', rows: 8, class: 'span12'
    .modal-footer
      = link_to 'Close', '#', class: 'btn', data: { dismiss: 'modal' }
      = f.submit class: 'btn btn-primary'
  